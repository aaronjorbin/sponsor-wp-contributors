{"version":3,"file":"component---src-pages-contributor-js.js","mappings":";;;;;;;;;;;;;;;;;AAA0B;;AAE1B;AACA,MAAMC,qBAAqB,GAAIC,MAAM,IAAK;EACzC,IAAIA,MAAM,KAAK,WAAW,EAAE;IAC3B,OAAO,WAAW;EACnB,CAAC,MAAM;IACN,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EACxD;AACD,CAAC;AAEc,SAASC,WAAW,CAAC;EAAEC;AAAY,CAAC,EAAE;EACpD,oBACC;IAAK,SAAS,EAAC;EAAa,gBAC3B,uEACEA,WAAW,CAACC,GAAG,gBACf;IAAG,IAAI,EAAED,WAAW,CAACC;EAAI,GAAED,WAAW,CAACE,IAAI,CAAK,GAEhDF,WAAW,CAACE,IACZ,CACG,EACJC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC,eACzB,uEACEA,WAAW,CAACK,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IACvCL,OAAO,CAACC,GAAG,CAACG,IAAI,CAACE,IAAI,CAAC;IACtB,MAAMC,IAAI,GAAGH,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAACR,GAAG;IAC7B,MAAMU,MAAM,GAAGJ,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,MAAM;IAClC,MAAMC,IAAI,GAAGlB,qBAAqB,CAACa,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC;IACrD,oBACC;MAAI,GAAG,EAAG,gBAAeJ,KAAM;IAAE,GAC/BI,IAAI,EAAC,IAAE;MAAG,IAAI,EAAEF;IAAK,GAAC,GAAC,EAACC,MAAM,CAAK,CAChC;EAEP,CAAC,CAAC,CACE,CACA;AAER;;;;;;;;;;;;;;;;;;ACrC0B;AAC8B;AACF;AACtDR,OAAO,CAACC,GAAG,CAACS,4DAAK,CAAC;AAClB;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,mBAAM,2DAAC,mEAAW;EAAC,WAAW,EAAED,4DAAKA;AAAC,EAAG;AACjE,iEAAeC,eAAe","sources":["webpack://sponsor-word-press-contributors/./src/components/contributors.js","webpack://sponsor-word-press-contributors/./src/pages/contributor.js"],"sourcesContent":["import React from \"react\";\n\n// function to capitalize first letter of a string, but if the string is wordpress then it should be WordPress\nconst capitalizeFirstLetter = (string) => {\n\tif (string === \"wordpress\") {\n\t\treturn \"WordPress\";\n\t} else {\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\n\t}\n};\n\nexport default function Contributor({ contributor }) {\n\treturn (\n\t\t<div className=\"contributor\">\n\t\t\t<h3>\n\t\t\t\t{contributor.url ? (\n\t\t\t\t\t<a href={contributor.url}>{contributor.name}</a>\n\t\t\t\t) : (\n\t\t\t\t\tcontributor.name\n\t\t\t\t)}\n\t\t\t</h3>\n\t\t\t{console.log(contributor)}\n\t\t\t<ul>\n\t\t\t\t{contributor.links.map((data, index) => {\n\t\t\t\t\tconsole.log(data.item);\n\t\t\t\t\tconst link = data.item[2].url;\n\t\t\t\t\tconst handle = data.item[1].handle;\n\t\t\t\t\tconst type = capitalizeFirstLetter(data.item[0].type);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={`content_item_${index}`}>\n\t\t\t\t\t\t\t{type}: <a href={link}>@{handle}</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport Contributor from \"../components/contributors.js\";\nimport allie from \"../contributors/allienimmons.yaml\";\nconsole.log(allie);\n// const YAMLbuildtime = () => {\n// \treturn <Contributor contributor={allie} />;\n// };\n// export default YAMLbuildtime;\nconst listContributor = () => <Contributor contributor={allie} />;\nexport default listContributor;\n"],"names":["React","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Contributor","contributor","url","name","console","log","links","map","data","index","item","link","handle","type","allie","listContributor"],"sourceRoot":""}